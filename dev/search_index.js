var documenterSearchIndex = {"docs":
[{"location":"algorithms/kalman_filter/#Kalman-Filter","page":"Kalman Filter","title":"Kalman Filter","text":"","category":"section"},{"location":"algorithms/kalman_filter/","page":"Kalman Filter","title":"Kalman Filter","text":"kf_predict!\nkf_correct!","category":"page"},{"location":"algorithms/kalman_filter/#PhDSE.kf_predict!","page":"Kalman Filter","title":"PhDSE.kf_predict!","text":"kf_predict!(fcache, Φ, [u], Q)\n\nEfficient and in-place implementation of the prediction step in a Kalman filter.\n\nArguments\n\nfcache::KFCache: a cache holding memory-heavy objects\nΦ::AbstractMatrix: transition matrix, i.e. dynamics of the state space model\nu::AbstractVector (optional): affine control input to the dynamics\nQ::AbstractMatrix: transition covariance, i.e. process noise of the state space model\n\n\n\n\n\n","category":"function"},{"location":"algorithms/kalman_filter/#PhDSE.kf_correct!","page":"Kalman Filter","title":"PhDSE.kf_correct!","text":"kf_correct!(fcache, y, H, [v], R)\n\nEfficient and in-place implementation of the correction step in a Kalman filter.\n\nArguments\n\nfcache::KFCache: a cache holding memory-heavy objects\ny::AbstractVector: a measurement (data point)\nH::AbstractMatrix: measurement matrix of the state space model\nv::AbstractVector (optional): affine control input to the measurement\nR::AbstractMatrix: measurement noise covariance of the state space model\n\n\n\n\n\n","category":"function"},{"location":"#PhDSE","page":"Home","title":"PhDSE","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Probabilistic high-Dimensional State Estimation","category":"page"},{"location":"examples/kalman_filter/#Kalman-filter-for-car-tracking","page":"Kalman Filter","title":"Kalman filter for car tracking","text":"","category":"section"},{"location":"examples/kalman_filter/","page":"Kalman Filter","title":"Kalman Filter","text":"From \"Bayesian Filtering and Smoothing\" [1], example 4.3.","category":"page"},{"location":"examples/kalman_filter/#First,-set-up-the-state-space-model.","page":"Kalman Filter","title":"First, set up the state space model.","text":"","category":"section"},{"location":"examples/kalman_filter/","page":"Kalman Filter","title":"Kalman Filter","text":"using LinearAlgebra\nusing Random\nusing GaussianDistributions\n\nusing Plots\n\nusing PhDSE\n\n\nfunction simulate(Φ, Q, u, H, R, v, μ₀, Σ₀, N; rng = Random.GLOBAL_RNG)\n    x = rand(rng, Gaussian(μ₀, Σ₀))\n    states = [x]\n    observations = []\n\n    for i in 1:N\n        push!(states, rand(rng, Gaussian(Φ * states[end] + u, Q)))\n        push!(observations, rand(rng, Gaussian(H * states[end] + v, R)))\n    end\n    return states, observations\nend\n\n\ndt = 0.1\ns1, s2 = 0.5, 0.5\nq1, q2 = 1, 1\n\nA = [1 0 dt 0;\n     0 1 0 dt;\n     0 0 1 0;\n     0 0 0 1]\n\nQ = [q1*dt^3/3 0 q1*dt^2/2 0;\n     0 q2*dt^3/3 0 q2*dt^2/2;\n     q1*dt^2/2 0 q1*dt 0;\n     0 q2*dt^2/2 0 q2*dt]\n\nH = [1 0 0 0; 0 1 0 0]\n\nd, D = size(H)\n\nR = [s1^2 0; 0 s2^2]\n\nμ₀, Σ₀ = zeros(D), 2 * Matrix(1e-5 * I, D, D)\nnothing # hide","category":"page"},{"location":"examples/kalman_filter/#Next,-generate-an-example-state-trajectory-and-according-measurements.","page":"Kalman Filter","title":"Next, generate an example state trajectory and according measurements.","text":"","category":"section"},{"location":"examples/kalman_filter/","page":"Kalman Filter","title":"Kalman Filter","text":"ground_truth, data = simulate(A, Q, zeros(D), H, R, zeros(d), μ₀, Σ₀, 200, rng=MersenneTwister(3))\nnothing # hide","category":"page"},{"location":"examples/kalman_filter/#Compute-the-filtering-posterior.","page":"Kalman Filter","title":"Compute the filtering posterior.","text":"","category":"section"},{"location":"examples/kalman_filter/","page":"Kalman Filter","title":"Kalman Filter","text":"sol = [(μ₀, sqrt.(diag(Σ₀)))]\nfcache = KFCache(D, d)\nfcache.μ .= μ₀\nfcache.Σ .= Σ₀\nfor y in data\n    kf_predict!(fcache, A, Q)\n    kf_correct!(fcache, H, R, y)\n    push!(sol, (copy(fcache.μ), sqrt.(diag(fcache.Σ))))\nend\nnothing # hide","category":"page"},{"location":"examples/kalman_filter/#Plot-the-results.","page":"Kalman Filter","title":"Plot the results.","text":"","category":"section"},{"location":"examples/kalman_filter/","page":"Kalman Filter","title":"Kalman Filter","text":"scatter([y[1] for y in data], [y[2] for y in data], label=\"Measurements\", markersize=2)\nplot!([y[1] for y in ground_truth], [y[2] for y in ground_truth], label=\"True Location\", linewidth=4, alpha=0.8)\nplot!(\n    [y[1] for (y, s) in sol], [y[2] for (y, s) in sol],\n    ribbon=(1.96 .* [s[1] for (y, s) in sol], 1.96 .* [s[2] for (y, s) in sol]),\n    label=\"Filter Estimate\", linewidth=4, alpha=0.8\n)\nsavefig(\"kalman_filter_example.svg\")\nnothing # hide","category":"page"},{"location":"examples/kalman_filter/","page":"Kalman Filter","title":"Kalman Filter","text":"(Image: )","category":"page"},{"location":"examples/kalman_filter/#References","page":"Kalman Filter","title":"References","text":"","category":"section"},{"location":"examples/kalman_filter/","page":"Kalman Filter","title":"Kalman Filter","text":"[1] \"Bayesian Filtering and Smoothing\", Simo Särkka, Cambridge University Press, 2013.","category":"page"}]
}
